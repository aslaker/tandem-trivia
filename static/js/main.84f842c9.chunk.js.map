{"version":3,"sources":["SVG/gc_sit.svg","components/Welcome.js","utils.js","components/TriviaCard.js","SVG/gc_love.svg","SVG/gc_dinner.svg","SVG/gc_nap.svg","SVG/gc_belly.svg","components/Score.js","components/Trivia.js","SVG/gc_branch.svg","components/ErrorPg.js","components/App.js","reportWebVitals.js","index.js"],"names":["Welcome","playGame","classes","useStyles","className","root","Container","maxWidth","Grid","container","direction","justify","alignItems","grid","item","xs","Typography","variant","color","header","src","grumpy","alt","title","img","component","type","Button","onClick","button","makeStyles","theme","flexGrow","minHeight","marginTop","spacing","fontSize","padding","textAlign","textTransform","display","marginLeft","marginRight","margin","shuffle","array","i","length","j","Math","floor","random","temp","addKey","value","forEach","id","TriviaCard","props","trivia","triviaQ","addToScore","nextQuestion","useState","setValue","error","setError","disabledNextButton","setDisableNextButton","disabledSubmitButton","setDisableSubmitButton","answers","setAnswers","helperText","setHelperText","useEffect","answersArray","incorrect","push","correct","listPossibleAnswers","onSubmit","event","preventDefault","includes","FormControl","formControl","FormLabel","question","RadioGroup","aria-label","name","onChange","target","map","answer","idx","FormControlLabel","control","Radio","label","FormHelperText","disabled","paddingLeft","paddingTop","Score","score","message","setMessage","image","setImage","test","setTest","grumpy_dinner","grumpy_nap","grumpy_belly","grumpy_love","data-testid","maxHeight","Trivia","triviaQs","resetGame","countCard","setCountCard","setScore","listItems","ErrorPg","href","App","questions","setQuestions","isPlaying","setIsPlaying","isLoading","setIsLoading","fetchTrivia","a","axios","get","response","data","slice","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84f842c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gc_sit.03a5519a.svg\";","import React from 'react';\n//import image\nimport grumpy from '../SVG/gc_sit.svg';\n\n//material UI styling\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Welcome({ playGame }) {\n  //uses the custom styling created\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Container maxWidth=\"md\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.grid}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h2\"\n                color=\"primary\"\n                className={classes.header}\n              >\n                Impress Me, Human\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                color=\"secondary\"\n                className={classes.header}\n              >\n                A Trivia \"Game\", oh joy\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <img\n                src={grumpy}\n                alt=\"grumpy_cat\"\n                title=\"grumpy_cat\"\n                className={classes.img}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography component=\"p\" className={classes.type}>\n                Grumpy cat is a tough critic. You're gonna have work really hard\n                to earn her respect. Your challenge is to get 10 tricky trivia\n                questions right... and MAYBE she'll let you rub her belly. But\n                don't count on it.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} className={classes.type}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={playGame}\n                className={classes.button}\n              >\n                PLAY\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n}\n\n//custom styling for page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grid: {\n    minHeight: '50vh',\n    marginTop: theme.spacing(5),\n  },\n  type: {\n    fontSize: '1.25em',\n    padding: theme.spacing(3),\n    textAlign: 'center',\n  },\n  header: {\n    textTransform: 'uppercase',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  img: {\n    maxWidth: '400px',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n}));\n","//implementation of the Fisher-Yates Algorithm\n\nexport default function shuffle(array) {\n  let startAtEnd = array.length - 1;\n  for (let i = startAtEnd; i > 0; i--) {\n    //Pick a random number j between one and the number of unstruck numbers remaining (inclusive).\n    const j = Math.floor(Math.random() * i);\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nexport function addKey(array) {\n  let value = 1;\n  array.forEach((item) => {\n    item.id = value;\n    value++;\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport shuffle from '../utils';\n\n//materialUI styling\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Typography } from '@material-ui/core';\n\nexport default function TriviaCard(props) {\n  let trivia = props.triviaQ;\n  let { addToScore, nextQuestion } = props;\n\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(false);\n  const [disabledNextButton, setDisableNextButton] = useState(true);\n  const [disabledSubmitButton, setDisableSubmitButton] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [helperText, setHelperText] = useState('Choose wisely');\n\n  //function will take both the incorrect and correct answers, combine into a single array, and shuffle the answers so the correct one isn't always the last value.\n  const listPossibleAnswers = (trivia) => {\n    let answersArray = [...trivia.incorrect];\n    answersArray.push(trivia.correct);\n    shuffle(answersArray);\n    return answersArray;\n  };\n\n  // on the page load, useEffect calls the LPA function on the single question and sets the possible answers once.\n  useEffect(() => {\n    const answers = listPossibleAnswers(trivia);\n    setAnswers(answers);\n  }, [trivia]);\n\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    setHelperText(' ');\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (value === trivia.correct) {\n      setDisableSubmitButton(!disabledSubmitButton);\n      setDisableNextButton(!disabledNextButton);\n      setHelperText(`Oh, you're correct. Me-wow.`);\n      setError(false);\n      addToScore();\n    } else if (trivia.incorrect.includes(value)) {\n      setDisableSubmitButton(!disabledSubmitButton);\n      setDisableNextButton(!disabledNextButton);\n      setHelperText(`Nope.`);\n      setError(true);\n    } else {\n      setHelperText(`C'mon, I don't have all day. Choose an answer.`);\n      setError(true);\n    }\n  };\n\n  return (\n    <>\n      <Container className={classes.container}>\n        <form onSubmit={handleSubmit}>\n          <Typography variant=\"h5\" color=\"secondary\" className={classes.header}>\n            Question {trivia.id}\n          </Typography>\n          <FormControl\n            component=\"fieldset\"\n            error={error}\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">{trivia.question}</FormLabel>\n            <RadioGroup\n              aria-label=\"quiz\"\n              name=\"quiz\"\n              value={value}\n              onChange={handleRadioChange}\n            >\n              {answers.map((answer, idx) => (\n                <FormControlLabel\n                  key={idx}\n                  value={answer}\n                  control={<Radio />}\n                  label={answer}\n                />\n              ))}\n            </RadioGroup>\n            <FormHelperText>{helperText}</FormHelperText>\n            {!disabledSubmitButton ? (\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                Submit Answer\n              </Button>\n            ) : (\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n                disabled\n              >\n                Submit Answer\n              </Button>\n            )}\n            {disabledNextButton ? (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n                disabled\n              >\n                Next Question\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={nextQuestion}\n              >\n                Next Question\n              </Button>\n            )}\n          </FormControl>\n        </form>\n      </Container>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  container: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  header: {\n    textTransform: 'uppercase',\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n    // textAlign: 'center',\n  },\n}));\n","export default __webpack_public_path__ + \"static/media/gc_love.2f1b4943.svg\";","export default __webpack_public_path__ + \"static/media/gc_dinner.6d732328.svg\";","export default __webpack_public_path__ + \"static/media/gc_nap.dabb1344.svg\";","export default __webpack_public_path__ + \"static/media/gc_belly.321f3c6c.svg\";","import React, { useState, useEffect } from 'react';\n\nimport grumpy_love from '../SVG/gc_love.svg';\nimport grumpy_dinner from '../SVG/gc_dinner.svg';\nimport grumpy_nap from '../SVG/gc_nap.svg';\nimport grumpy_belly from '../SVG/gc_belly.svg';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Score({ score }) {\n  const classes = useStyles();\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [test, setTest] = useState('');\n\n  //loads correct message and image depending on the final score\n  useEffect(() => {\n    if (score <= 1) {\n      setMessage(`You interrupted my meal for this...`);\n      setImage(grumpy_dinner);\n      setTest('worst');\n    } else if (score > 1 && score <= 5) {\n      setMessage(`Sigh. How dare you disturb my slumber.`);\n      setImage(grumpy_nap);\n      setTest('bad');\n    } else if (score > 5 && score <= 9) {\n      setMessage(`This belly is still off-limits to the likes of you.`);\n      setImage(grumpy_belly);\n      setTest('good');\n    } else {\n      setMessage(`You'll do.`);\n      setImage(grumpy_love);\n      setTest('best');\n    }\n  }, [image, message, score]);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" color=\"secondary\" className={classes.header}>\n        {score} questions correct\n      </Typography>\n      <img\n        src={image}\n        alt=\"grumpy_cat\"\n        title=\"grumpy_cat\"\n        data-testid={test}\n        className={classes.img}\n      />\n      <Typography component=\"p\" className={classes.type}>\n        {message}\n      </Typography>\n    </div>\n  );\n}\n\n//custom styling for page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  type: {\n    fontSize: '1.15em',\n    padding: theme.spacing(5),\n    textAlign: 'center',\n  },\n  header: {\n    textTransform: 'uppercase',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  img: {\n    maxWidth: '300px',\n    maxHeight: '400px',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n","import React, { useState } from 'react';\nimport TriviaCard from './TriviaCard';\nimport Score from './Score';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Trivia({ triviaQs, resetGame }) {\n  let [countCard, setCountCard] = useState(0);\n  let [score, setScore] = useState(0);\n\n  //function displays the next question in the deck when button is clicked on the child component\n  const nextQuestion = () => {\n    countCard += 1;\n    setCountCard(countCard);\n  };\n\n  const addToScore = () => {\n    score += 1;\n    setScore(score);\n  };\n\n  //makes a Trivia card child component for each question\n  const listItems = triviaQs.map((question) => (\n    <TriviaCard\n      key={question.id}\n      id={question.id}\n      triviaQ={question}\n      nextQuestion={nextQuestion}\n      addToScore={addToScore}\n    />\n  ));\n\n  const classes = useStyles();\n  return (\n    <>\n      {countCard === 10 ? (\n        //show play again screen with score\n        <Container maxWidth=\"md\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.grid}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h3\"\n                color=\"primary\"\n                className={classes.header}\n              >\n                Impress Me, Human\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Score score={score} />\n            </Grid>\n            <Grid item xs={12} className={classes.type}>\n              <Button variant=\"outlined\" color=\"primary\" onClick={resetGame}>\n                PLAY AGAIN\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      ) : (\n        <Container maxWidth=\"md\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.grid}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h3\"\n                color=\"primary\"\n                className={classes.header}\n              >\n                Impress Me, Human\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              {listItems[countCard]}\n            </Grid>\n          </Grid>\n        </Container>\n      )}\n    </>\n  );\n}\n\n//custom styling for page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grid: {\n    minHeight: '50vh',\n  },\n  header: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  type: {\n    textAlign: 'center',\n  },\n}));\n","export default __webpack_public_path__ + \"static/media/gc_branch.bc291c93.svg\";","import React from 'react';\n//import image\nimport grumpy from '../SVG/gc_branch.svg';\n\n//material UI styling\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function ErrorPg() {\n  //uses the custom styling created\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Container maxWidth=\"md\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.grid}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h2\"\n                color=\"primary\"\n                className={classes.header}\n              >\n                Oh no!\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <img\n                src={grumpy}\n                alt=\"grumpy_cat\"\n                title=\"grumpy_cat\"\n                className={classes.img}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography component=\"p\" className={classes.type}>\n                Grumpy cat went looking for that page & now he's stuck in a\n                tree... Let's get you back to where you came from.\n              </Typography>\n            </Grid>\n            <Button variant=\"outlined\" color=\"primary\" href=\"/\">\n              BACK TO SAFETY\n            </Button>\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n}\n\n//custom styling for page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grid: {\n    minHeight: '100vh',\n  },\n  type: {\n    fontSize: '1.15em',\n    padding: theme.spacing(5),\n    textAlign: 'center',\n  },\n  header: {\n    textTransform: 'uppercase',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  img: {\n    maxWidth: '400px',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\n//components and helpers\nimport Welcome from './Welcome.js';\nimport Trivia from './Trivia.js';\nimport ErrorPg from './ErrorPg.js';\nimport shuffle, { addKey } from '../utils';\n\n//\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTrivia = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get('/api');\n      const { data } = await response;\n      shuffle(data);\n      addKey(data);\n      data.slice(0, 10);\n      setQuestions(data);\n      setIsLoading(false);\n      setIsPlaying(true);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n  };\n\n  const resetGame = () => {\n    setIsPlaying(false);\n  };\n\n  return (\n    <>\n      {isLoading && <div>loading</div>}\n      {!isPlaying && !error ? (\n        <Welcome playGame={fetchTrivia} />\n      ) : (\n        <Trivia triviaQs={questions} resetGame={resetGame} />\n      )}\n      {error && <ErrorPg />}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}